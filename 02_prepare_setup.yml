- name: This play ensures environment is set up for cluster creation
  hosts: vm_host
  vars_files:
    - vars/k8s_cluster.yml
  tasks:
    - name: Set user home as fact
      ansible.builtin.set_fact:
        home_dir: "{{ ansible_env.HOME }}"

    - name: Ensure workspace directory exists
      ansible.builtin.file:
        path: "{{ workspace_directory.base_path }}"
        state: directory
        mode: "0755"

    - name: Ensure cluster folder exists
      ansible.builtin.file:
        path: "{{ workspace_directory.base_path }}/clusters/{{ k8s.cluster_name | default('k8s-test', true) }}"
        state: directory
        mode: "0755"

    - name: Ensure pivot tmp folder exists
      ansible.builtin.file:
        path: "/tmp/{{ k8s.cluster_name | default('k8s-test', true) }}"
        state: directory
        mode: "0755"

    - name: Populate cluster folder with terraform files
      ansible.builtin.copy:
        src: "files/terraform/"
        dest: "{{ workspace_directory.base_path }}/clusters/{{ k8s.cluster_name | default('k8s-test', true) }}"
        mode: "0755"

    - name: Snapshot cluster configuration for further use
      ansible.builtin.copy:
        src: "vars"
        dest: "{{ workspace_directory.base_path }}/clusters/{{ k8s.cluster_name | default('k8s-test', true) }}/"
        mode: "0755"

    - name: Ensure helm is installed
      ansible.builtin.unarchive:
        src: "{{ helm.helm_installer }}"
        dest: /tmp/
        remote_src: true

    - name: Install helm in PATH
      ansible.builtin.copy:
        src: /tmp/linux-amd64/helm
        dest: /usr/bin/
        remote_src: true
        mode: +x
      become: true

    - name: Install Helm Diff
      kubernetes.core.helm_plugin:
        state: present
        plugin_path: https://github.com/databus23/helm-diff

    - name: Remove directory
      ansible.builtin.file:
        path: /tmp/linux-amd64
        state: absent

    - name: Create ssh keypair
      community.crypto.openssh_keypair:
        path: "{{ playbook_dir }}/id_rsa_{{ k8s.cluster_name | default('k8s-test', true) }}"
      delegate_to: localhost

    - name: Copy SSH keys in working directory
      ansible.builtin.copy:
        src: "{{ playbook_dir }}/{{ item }}"
        dest: "{{ workspace_directory.base_path }}/clusters/{{ k8s.cluster_name | default('k8s-test', true) }}/{{ item }}"
        mode: "0755"
      loop:
        - id_rsa_{{ k8s.cluster_name | default('k8s-test', true) }}
        - id_rsa_{{ k8s.cluster_name | default('k8s-test', true) }}.pub

    - name: Getting ssh private key
      ansible.builtin.slurp:
        src: "{{ workspace_directory.base_path }}/clusters/{{ k8s.cluster_name | default('k8s-test', true) }}/id_rsa_{{ k8s.cluster_name | default('k8s-test', true) }}" # noqa yaml[line-length]
      register: k8s_key

    - name: Getting ssh public key
      ansible.builtin.slurp:
        src: "{{ workspace_directory.base_path }}/clusters/{{ k8s.cluster_name | default('k8s-test', true) }}/id_rsa_{{ k8s.cluster_name | default('k8s-test', true) }}.pub" # noqa yaml[line-length]
      register: k8s_key_pub

    - name: Set SSH keys as fact
      ansible.builtin.set_fact:
        k8s_key: "{{ k8s_key['content'] | b64decode }}"
        k8s_key_pub: "{{ k8s_key_pub['content'] | b64decode }}"

    - name: Download CentOS image
      ansible.builtin.get_url:
        url: "{{ centos.cloud_image }}"
        dest: /tmp/{{ image_name }}.qcow2
        mode: "0777"
      when: k8s.cluster_os == 'CentOS'

    - name: Download Ubuntu image
      ansible.builtin.get_url:
        url: "{{ ubuntu_jammy.cloud_image }}"
        dest: /tmp/{{ image_name }}.qcow2
        mode: "0777"
      when: k8s.cluster_os == 'Ubuntu'
