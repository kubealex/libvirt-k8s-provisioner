---
- name: Install container runtime
  hosts: masters,workers
  become: true
  vars_files:
    - vars/k8s_cluster.yml
  tasks:
    - name: Ensure prerequisites are met.
      block:
        - name: Add modules to autostart
          blockinfile:
            path: /etc/modules-load.d/k8s.conf
            block: |
              overlay
              br_netfilter
            create: true

        - name: Enable br_netfilter
          modprobe:
            name: "{{Â item }}"
            state: present
          loop:
            - br_netfilter
            - overlay

        - name: Enable iptables inspection on bridge ifaces
          blockinfile:
            path: /etc/sysctl.d/k8s.conf
            block: |
              net.ipv4.ip_forward = 1
              net.bridge.bridge-nf-call-ip6tables = 1
              net.bridge.bridge-nf-call-iptables = 1
            create: true

        - name: Reload sysctl
          shell: sysctl --system

    - name: Install docker
      block: 
        - name: Ensure required packages are present
          yum:
            name:
              - yum-utils 
              - device-mapper-persistent-data 
              - lvm2
            lock_timeout: 60
            state: latest

        - name: Add docker repository
          get_url:
            url: "https://download.docker.com/linux/centos/docker-ce.repo"
            dest: "/etc/yum.repos.d/docker-ce.repo"

        - name: Ensure docker is installed
          yum:
            name:
              - containerd.io-1.2.13
              - docker-ce-19.03.8
              - docker-ce-cli-19.03.8
            lock_timeout: 60
            state: latest

        - name: Create /etc/docker
          file:
            state: directory
            path: /etc/docker
        
        - name: Copy docker configuration in /etc/docker
          copy:
            src: files/daemon.json
            dest: /etc/docker/

        - name: Create systemd folder for Docker service
          file:
            path: /etc/systemd/system/docker.service.d
            state: directory

        - name: Force systemd to reread configs
          systemd:
            daemon_reload: yes

        - name: Ensure docker is enabled and started
          systemd: 
            name: docker
            state: restarted
            enabled: true

      when: k8s.container_runtime == 'docker'

    - name: Install cri-o
      block: 
        - name: Add kubic CentOS7 repository
          get_url:
            url: "{{ item.url }}"
            dest: "{{ item.file }}"
            validate_certs: false
          loop: 
            - file: "/etc/yum.repos.d/devel:kubic:libcontainers:stable.repo"
              url: "http://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/CentOS_7/devel:kubic:libcontainers:stable.repo"
            - file: "/etc/yum.repos.d/devel:kubic:libcontainers:stable:cri-o:1.18.repo"
              url: "http://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable:/cri-o:/1.18/CentOS_7/devel:kubic:libcontainers:stable:cri-o:1.18.repo"

        - name: Ensure cri-o is installed
          yum:
            name: cri-o
            lock_timeout: 60
            state: latest

        - name: Ensure systemd as default cgroup_manager
          replace:
            path: /etc/crio/crio.conf
            regexp: '^cgroup_manager.*'
            replace: 'cgroup_manager = "cgroupfs"'

        - name: Ensure NET_RAW is enabled to support DNS resolution from coredns while PR is accepted
          lineinfile:
            path: /etc/crio/crio.conf
            line: '"NET_RAW",'
            insertafter: 'default_capabilities'

        - name: Add capabilities due to particular capabilities required by Rancher
          block: 

            - name: Ensure MKNOD is enabled if installing Rancher
              lineinfile:
                path: /etc/crio/crio.conf
                line: '"MKNOD",'
                insertafter: 'default_capabilities'
          when: k8s.install_rancher
           
        - name: Ensure to use all possible plugins dir
          replace:
            path: /etc/crio/crio.conf
            regexp: '"/usr/libexec/cni",'
            replace: '"/usr/libexec/cni", "/opt/cni/bin/",'

        - name: Add docker.io to registries due to bad usage of unqualified images from many dev teams
          lineinfile:
            path: /etc/crio/crio.conf
            regexp: '^#registries'
            line: 'registries = [ "docker.io", "quay.io" ]'

        - name: Remove example CNI configs
          file:
            path: "/etc/cni/net.d/{{ item }}"
            state: absent
          loop:
            - 100-crio-bridge.conf
            - 200-loopback.conf

        - name: Force systemd to reread configs
          systemd:
            daemon_reload: yes

        - name: Ensure cri-o is enabled and started
          systemd:
            name: crio
            state: started
            enabled: true
      when: k8s.container_runtime == 'crio'

    - name: Install containerd
      block:
        - name: Ensure required packages are present
          yum:
            name:
              - yum-utils
              - device-mapper-persistent-data
              - lvm2
            lock_timeout: 60
            state: latest

        - name: Add containerd repository
          get_url:
            url: "https://download.docker.com/linux/centos/docker-ce.repo"
            dest: "/etc/yum.repos.d/docker-ce.repo"

        - name: Ensure containerd is installed
          yum:
            name: containerd.io
            lock_timeout: 60
            state: latest

        - name: Create /etc/containers
          file:
            state: directory
            path: /etc/containerd

        - name: Initialize config
          shell: containerd config default > /etc/containerd/config.toml

        - name: Force systemd to reread configs
          systemd:
            daemon_reload: yes

        - name: Ensure containerd is enabled and started
          systemd:
            name: containerd
            state: restarted
            enabled: true
      when: k8s.container_runtime == 'containerd'
